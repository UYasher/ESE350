
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000420  00800100  0000098e  00000a02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000098e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000e22  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e80  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00000ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000189e  00000000  00000000  00000fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a22  00000000  00000000  00002876  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009d8  00000000  00000000  00003298  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000043c  00000000  00000000  00003c70  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000053a  00000000  00000000  000040ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000185a  00000000  00000000  000045e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00005e40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	15 e0       	ldi	r17, 0x05	; 5
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e8       	ldi	r30, 0x8E	; 142
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	25 e0       	ldi	r18, 0x05	; 5
  8c:	a0 e2       	ldi	r26, 0x20	; 32
  8e:	b5 e0       	ldi	r27, 0x05	; 5
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7d 01 	call	0x2fa	; 0x2fa <main>
  9e:	0c 94 c5 04 	jmp	0x98a	; 0x98a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_command>:
      lcd_command(CMD_SET_COLUMN_LOWER | (c & 0xf));
      lcd_command(CMD_SET_COLUMN_UPPER | ((c >> 4) & 0xf));
      lcd_data(0x0);
    }     
  }
}
  a6:	5c 98       	cbi	0x0b, 4	; 11
  a8:	27 e0       	ldi	r18, 0x07	; 7
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	5d 98       	cbi	0x0b, 5	; 11
  b0:	ac 01       	movw	r20, r24
  b2:	02 2e       	mov	r0, r18
  b4:	02 c0       	rjmp	.+4      	; 0xba <lcd_command+0x14>
  b6:	55 95       	asr	r21
  b8:	47 95       	ror	r20
  ba:	0a 94       	dec	r0
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <lcd_command+0x10>
  be:	40 ff       	sbrs	r20, 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <lcd_command+0x20>
  c2:	5e 9a       	sbi	0x0b, 6	; 11
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <lcd_command+0x22>
  c6:	5e 98       	cbi	0x0b, 6	; 11
  c8:	5d 9a       	sbi	0x0b, 5	; 11
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	31 09       	sbc	r19, r1
  ce:	78 f7       	brcc	.-34     	; 0xae <lcd_command+0x8>
  d0:	08 95       	ret

000000d2 <lcd_init>:
  d2:	56 9a       	sbi	0x0a, 6	; 10
  d4:	55 9a       	sbi	0x0a, 5	; 10
  d6:	54 9a       	sbi	0x0a, 4	; 10
  d8:	53 9a       	sbi	0x0a, 3	; 10
  da:	52 9a       	sbi	0x0a, 2	; 10
  dc:	5a 98       	cbi	0x0b, 2	; 11
  de:	5b 98       	cbi	0x0b, 3	; 11
  e0:	2f e9       	ldi	r18, 0x9F	; 159
  e2:	86 e8       	ldi	r24, 0x86	; 134
  e4:	91 e0       	ldi	r25, 0x01	; 1
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <lcd_init+0x14>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <lcd_init+0x1e>
  f0:	00 00       	nop
  f2:	5b 9a       	sbi	0x0b, 3	; 11
  f4:	83 ea       	ldi	r24, 0xA3	; 163
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
  fa:	80 ea       	ldi	r24, 0xA0	; 160
  fc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 100:	80 ec       	ldi	r24, 0xC0	; 192
 102:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 106:	80 e4       	ldi	r24, 0x40	; 64
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 10c:	8c e2       	ldi	r24, 0x2C	; 44
 10e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 112:	83 ed       	ldi	r24, 0xD3	; 211
 114:	90 e3       	ldi	r25, 0x30	; 48
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <lcd_init+0x44>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <lcd_init+0x4a>
 11c:	00 00       	nop
 11e:	8e e2       	ldi	r24, 0x2E	; 46
 120:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 124:	83 ed       	ldi	r24, 0xD3	; 211
 126:	90 e3       	ldi	r25, 0x30	; 48
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_init+0x56>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <lcd_init+0x5c>
 12e:	00 00       	nop
 130:	8f e2       	ldi	r24, 0x2F	; 47
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 136:	83 ec       	ldi	r24, 0xC3	; 195
 138:	99 e0       	ldi	r25, 0x09	; 9
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_init+0x68>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <lcd_init+0x6e>
 140:	00 00       	nop
 142:	86 e2       	ldi	r24, 0x26	; 38
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
 148:	08 95       	ret

0000014a <lcd_data>:
 14a:	5c 9a       	sbi	0x0b, 4	; 11
 14c:	27 e0       	ldi	r18, 0x07	; 7
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	5d 98       	cbi	0x0b, 5	; 11
 154:	ac 01       	movw	r20, r24
 156:	02 2e       	mov	r0, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <lcd_data+0x14>
 15a:	55 95       	asr	r21
 15c:	47 95       	ror	r20
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <lcd_data+0x10>
 162:	40 ff       	sbrs	r20, 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <lcd_data+0x20>
 166:	5e 9a       	sbi	0x0b, 6	; 11
 168:	01 c0       	rjmp	.+2      	; 0x16c <lcd_data+0x22>
 16a:	5e 98       	cbi	0x0b, 6	; 11
 16c:	5d 9a       	sbi	0x0b, 5	; 11
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	31 09       	sbc	r19, r1
 172:	78 f7       	brcc	.-34     	; 0x152 <lcd_data+0x8>
 174:	08 95       	ret

00000176 <lcd_set_brightness>:
void lcd_data(uint8_t c) {
  A0_PORT |= _BV(A0);

  spiwrite(c);
}
void lcd_set_brightness(uint8_t val) {
 176:	cf 93       	push	r28
 178:	c8 2f       	mov	r28, r24
    lcd_command(CMD_SET_VOLUME_FIRST);
 17a:	81 e8       	ldi	r24, 0x81	; 129
 17c:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
    lcd_command(CMD_SET_VOLUME_SECOND | (val & 0x3f));
 180:	8c 2f       	mov	r24, r28
 182:	8f 73       	andi	r24, 0x3F	; 63
 184:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
}
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <write_buffer>:

//write to the lcd buffer
void write_buffer(uint8_t *buff) {
 18c:	cf 92       	push	r12
 18e:	df 92       	push	r13
 190:	ef 92       	push	r14
 192:	ff 92       	push	r15
 194:	0f 93       	push	r16
 196:	1f 93       	push	r17
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	0f 2e       	mov	r0, r31
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	ef 2e       	mov	r14, r31
 1a2:	f5 e0       	ldi	r31, 0x05	; 5
 1a4:	ff 2e       	mov	r15, r31
 1a6:	f0 2d       	mov	r31, r0
 1a8:	ec 01       	movw	r28, r24
 1aa:	0f 2e       	mov	r0, r31
 1ac:	f0 e1       	ldi	r31, 0x10	; 16
 1ae:	cf 2e       	mov	r12, r31
 1b0:	f5 e0       	ldi	r31, 0x05	; 5
 1b2:	df 2e       	mov	r13, r31
 1b4:	f0 2d       	mov	r31, r0
  uint8_t c, p;

  for(p = 0; p < 8; p++) {
    
    lcd_command(CMD_SET_PAGE | pagemap[p]);
 1b6:	f7 01       	movw	r30, r14
 1b8:	80 81       	ld	r24, Z
 1ba:	f2 e0       	ldi	r31, 0x02	; 2
 1bc:	ef 0e       	add	r14, r31
 1be:	f1 1c       	adc	r15, r1
 1c0:	80 6b       	ori	r24, 0xB0	; 176
 1c2:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
    lcd_command(CMD_SET_COLUMN_LOWER | (0x0 & 0xf));
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
    lcd_command(CMD_SET_COLUMN_UPPER | ((0x0 >> 4) & 0xf));
 1cc:	80 e1       	ldi	r24, 0x10	; 16
 1ce:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
    lcd_command(CMD_RMW);
 1d2:	80 ee       	ldi	r24, 0xE0	; 224
 1d4:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
    lcd_data(0xff);
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_data>
 1de:	8e 01       	movw	r16, r28
 1e0:	00 58       	subi	r16, 0x80	; 128
 1e2:	1f 4f       	sbci	r17, 0xFF	; 255
    
    
    for(c = 0; c < 128; c++) {
      lcd_data(buff[(128*p)+c]);
 1e4:	89 91       	ld	r24, Y+
 1e6:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_data>
    lcd_command(CMD_SET_COLUMN_UPPER | ((0x0 >> 4) & 0xf));
    lcd_command(CMD_RMW);
    lcd_data(0xff);
    
    
    for(c = 0; c < 128; c++) {
 1ea:	c0 17       	cp	r28, r16
 1ec:	d1 07       	cpc	r29, r17
 1ee:	d1 f7       	brne	.-12     	; 0x1e4 <write_buffer+0x58>
 1f0:	e8 01       	movw	r28, r16

//write to the lcd buffer
void write_buffer(uint8_t *buff) {
  uint8_t c, p;

  for(p = 0; p < 8; p++) {
 1f2:	ce 14       	cp	r12, r14
 1f4:	df 04       	cpc	r13, r15
 1f6:	f9 f6       	brne	.-66     	; 0x1b6 <write_buffer+0x2a>
    
    for(c = 0; c < 128; c++) {
      lcd_data(buff[(128*p)+c]);
    }
  }
}
 1f8:	df 91       	pop	r29
 1fa:	cf 91       	pop	r28
 1fc:	1f 91       	pop	r17
 1fe:	0f 91       	pop	r16
 200:	ff 90       	pop	r15
 202:	ef 90       	pop	r14
 204:	df 90       	pop	r13
 206:	cf 90       	pop	r12
 208:	08 95       	ret

0000020a <clear_buffer>:

// function to clear everything in the buffer
void clear_buffer(uint8_t *buff) {
	memset(buff, 0, 1024);
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	34 e0       	ldi	r19, 0x04	; 4
 20e:	fc 01       	movw	r30, r24
 210:	a9 01       	movw	r20, r18
 212:	11 92       	st	Z+, r1
 214:	41 50       	subi	r20, 0x01	; 1
 216:	50 40       	sbci	r21, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <clear_buffer+0x8>
 21a:	08 95       	ret

0000021c <get_raw_x>:
int transform_y(int raw_y){
	//USART_putstring("Transforming y\n");
    const int shift = 0;
    const int scale = 2;
    return (raw_y - shift)* scale;
}
 21c:	87 b1       	in	r24, 0x07	; 7
 21e:	88 62       	ori	r24, 0x28	; 40
 220:	87 b9       	out	0x07, r24	; 7
 222:	45 9a       	sbi	0x08, 5	; 8
 224:	43 98       	cbi	0x08, 3	; 8
 226:	87 b1       	in	r24, 0x07	; 7
 228:	8b 7e       	andi	r24, 0xEB	; 235
 22a:	87 b9       	out	0x07, r24	; 7
 22c:	ec e7       	ldi	r30, 0x7C	; 124
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 e4       	ldi	r24, 0x40	; 64
 232:	80 83       	st	Z, r24
 234:	80 81       	ld	r24, Z
 236:	80 83       	st	Z, r24
 238:	80 81       	ld	r24, Z
 23a:	8d 6f       	ori	r24, 0xFD	; 253
 23c:	80 83       	st	Z, r24
 23e:	ea e7       	ldi	r30, 0x7A	; 122
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 e8       	ldi	r24, 0x80	; 128
 244:	80 83       	st	Z, r24
 246:	87 e0       	ldi	r24, 0x07	; 7
 248:	80 83       	st	Z, r24
 24a:	80 81       	ld	r24, Z
 24c:	80 64       	ori	r24, 0x40	; 64
 24e:	80 83       	st	Z, r24
 250:	80 81       	ld	r24, Z
 252:	86 fd       	sbrc	r24, 6
 254:	fd cf       	rjmp	.-6      	; 0x250 <get_raw_x+0x34>
 256:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 25a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 25e:	08 95       	ret

00000260 <get_raw_y>:
 260:	87 b1       	in	r24, 0x07	; 7
 262:	87 b9       	out	0x07, r24	; 7
 264:	87 b1       	in	r24, 0x07	; 7
 266:	87 b9       	out	0x07, r24	; 7
 268:	42 9a       	sbi	0x08, 2	; 8
 26a:	44 98       	cbi	0x08, 4	; 8
 26c:	ec e7       	ldi	r30, 0x7C	; 124
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	80 e4       	ldi	r24, 0x40	; 64
 272:	80 83       	st	Z, r24
 274:	80 81       	ld	r24, Z
 276:	80 83       	st	Z, r24
 278:	80 81       	ld	r24, Z
 27a:	85 60       	ori	r24, 0x05	; 5
 27c:	80 83       	st	Z, r24
 27e:	ea e7       	ldi	r30, 0x7A	; 122
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	80 e8       	ldi	r24, 0x80	; 128
 284:	80 83       	st	Z, r24
 286:	87 e0       	ldi	r24, 0x07	; 7
 288:	80 83       	st	Z, r24
 28a:	80 81       	ld	r24, Z
 28c:	80 64       	ori	r24, 0x40	; 64
 28e:	80 83       	st	Z, r24
 290:	80 81       	ld	r24, Z
 292:	86 fd       	sbrc	r24, 6
 294:	fd cf       	rjmp	.-6      	; 0x290 <get_raw_y+0x30>
 296:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 29a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 29e:	08 95       	ret

000002a0 <get_x>:

int get_x(void){
	//USART_putstring("Began getting x\n");
    return transform_x(get_raw_x());
 2a0:	0e 94 0e 01 	call	0x21c	; 0x21c <get_raw_x>
}
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	08 95       	ret

000002aa <get_y>:

int get_y(void){
	//USART_putstring("Began getting y\n");
    return transform_y(get_raw_y());
 2aa:	0e 94 30 01 	call	0x260	; 0x260 <get_raw_y>
}
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	08 95       	ret

000002b4 <USART_init>:
char displayChar = 0;

void USART_init(void){
	
	/*Set baud rate */
	UBRR0H = (unsigned char)(BAUD_PRESCALLER>>8);
 2b4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)BAUD_PRESCALLER;
 2b8:	87 e6       	ldi	r24, 0x67	; 103
 2ba:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 2be:	88 e1       	ldi	r24, 0x18	; 24
 2c0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 2c4:	8e e0       	ldi	r24, 0x0E	; 14
 2c6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 2ca:	08 95       	ret

000002cc <USART_send>:
}

void USART_send( unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));
 2cc:	e0 ec       	ldi	r30, 0xC0	; 192
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	90 81       	ld	r25, Z
 2d2:	95 ff       	sbrs	r25, 5
 2d4:	fd cf       	rjmp	.-6      	; 0x2d0 <USART_send+0x4>
	UDR0 = data;
 2d6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 2da:	08 95       	ret

000002dc <USART_putstring>:
}

void USART_putstring(char* StringPtr){
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00){
 2e2:	88 81       	ld	r24, Y
 2e4:	88 23       	and	r24, r24
 2e6:	31 f0       	breq	.+12     	; 0x2f4 <USART_putstring+0x18>
 2e8:	21 96       	adiw	r28, 0x01	; 1
		USART_send(*StringPtr);
 2ea:	0e 94 66 01 	call	0x2cc	; 0x2cc <USART_send>
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}

void USART_putstring(char* StringPtr){
	while(*StringPtr != 0x00){
 2ee:	89 91       	ld	r24, Y+
 2f0:	81 11       	cpse	r24, r1
 2f2:	fb cf       	rjmp	.-10     	; 0x2ea <USART_putstring+0xe>
		USART_send(*StringPtr);
	StringPtr++;}
}
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	08 95       	ret

000002fa <main>:


int main(void)
{
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	cd b7       	in	r28, 0x3d	; 61
 300:	de b7       	in	r29, 0x3e	; 62
 302:	2a 97       	sbiw	r28, 0x0a	; 10
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	f8 94       	cli
 308:	de bf       	out	0x3e, r29	; 62
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	cd bf       	out	0x3d, r28	; 61
	USART_init(); //initializes the stuff for printing
 30e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <USART_init>
	USART_putstring("Started \n");
 312:	80 e1       	ldi	r24, 0x10	; 16
 314:	95 e0       	ldi	r25, 0x05	; 5
 316:	0e 94 6e 01 	call	0x2dc	; 0x2dc <USART_putstring>
	
	//setting up the gpio for backlight
	DDRD |= 0x80;
 31a:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;
 31c:	5f 98       	cbi	0x0b, 7	; 11
	PORTD |= 0x00;
 31e:	8b b1       	in	r24, 0x0b	; 11
 320:	8b b9       	out	0x0b, r24	; 11
	
	DDRB |= 0x05;
 322:	84 b1       	in	r24, 0x04	; 4
 324:	85 60       	ori	r24, 0x05	; 5
 326:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05;
 328:	85 b1       	in	r24, 0x05	; 5
 32a:	8a 7f       	andi	r24, 0xFA	; 250
 32c:	85 b9       	out	0x05, r24	; 5
	PORTB |= 0x00;
 32e:	85 b1       	in	r24, 0x05	; 5
 330:	85 b9       	out	0x05, r24	; 5
	
	//lcd initialisation
	lcd_init();
 332:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_init>
	lcd_command(CMD_DISPLAY_ON);
 336:	8f ea       	ldi	r24, 0xAF	; 175
 338:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_command>
	lcd_set_brightness(0x18);
 33c:	88 e1       	ldi	r24, 0x18	; 24
 33e:	0e 94 bb 00 	call	0x176	; 0x176 <lcd_set_brightness>
	write_buffer(buff);
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	0e 94 c6 00 	call	0x18c	; 0x18c <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34a:	2f e7       	ldi	r18, 0x7F	; 127
 34c:	8a e1       	ldi	r24, 0x1A	; 26
 34e:	96 e0       	ldi	r25, 0x06	; 6
 350:	21 50       	subi	r18, 0x01	; 1
 352:	80 40       	sbci	r24, 0x00	; 0
 354:	90 40       	sbci	r25, 0x00	; 0
 356:	e1 f7       	brne	.-8      	; 0x350 <main+0x56>
 358:	00 c0       	rjmp	.+0      	; 0x35a <main+0x60>
 35a:	00 00       	nop
	_delay_ms(2000);
	clear_buffer(buff);
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	0e 94 05 01 	call	0x20a	; 0x20a <clear_buffer>
	{
		x = get_x();
		y = get_y();
		
		char out_char[10];
		sprintf(out_char, "%d \n", x);
 364:	0f 2e       	mov	r0, r31
 366:	fa e1       	ldi	r31, 0x1A	; 26
 368:	ef 2e       	mov	r14, r31
 36a:	f5 e0       	ldi	r31, 0x05	; 5
 36c:	ff 2e       	mov	r15, r31
 36e:	f0 2d       	mov	r31, r0
 370:	8e 01       	movw	r16, r28
 372:	0f 5f       	subi	r16, 0xFF	; 255
 374:	1f 4f       	sbci	r17, 0xFF	; 255
	int x = 0;
	int y = 0;
	
	while (1)
	{
		x = get_x();
 376:	0e 94 50 01 	call	0x2a0	; 0x2a0 <get_x>
 37a:	d8 2e       	mov	r13, r24
 37c:	c9 2e       	mov	r12, r25
		y = get_y();
 37e:	0e 94 55 01 	call	0x2aa	; 0x2aa <get_y>
		
		char out_char[10];
		sprintf(out_char, "%d \n", x);
 382:	cf 92       	push	r12
 384:	df 92       	push	r13
 386:	ff 92       	push	r15
 388:	ef 92       	push	r14
 38a:	1f 93       	push	r17
 38c:	0f 93       	push	r16
 38e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <sprintf>
		USART_putstring(out_char);
 392:	c8 01       	movw	r24, r16
 394:	0e 94 6e 01 	call	0x2dc	; 0x2dc <USART_putstring>
		
		//USART_putstring("Got past first print\n");
		
		clear_buffer(buff);	
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	91 e0       	ldi	r25, 0x01	; 1
 39c:	0e 94 05 01 	call	0x20a	; 0x20a <clear_buffer>
		write_buffer(buff);
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	91 e0       	ldi	r25, 0x01	; 1
 3a4:	0e 94 c6 00 	call	0x18c	; 0x18c <write_buffer>
 3a8:	0f 90       	pop	r0
 3aa:	0f 90       	pop	r0
 3ac:	0f 90       	pop	r0
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	e0 cf       	rjmp	.-64     	; 0x376 <main+0x7c>

000003b6 <sprintf>:
 3b6:	ae e0       	ldi	r26, 0x0E	; 14
 3b8:	b0 e0       	ldi	r27, 0x00	; 0
 3ba:	e1 ee       	ldi	r30, 0xE1	; 225
 3bc:	f1 e0       	ldi	r31, 0x01	; 1
 3be:	0c 94 9c 04 	jmp	0x938	; 0x938 <__prologue_saves__+0x1c>
 3c2:	0d 89       	ldd	r16, Y+21	; 0x15
 3c4:	1e 89       	ldd	r17, Y+22	; 0x16
 3c6:	86 e0       	ldi	r24, 0x06	; 6
 3c8:	8c 83       	std	Y+4, r24	; 0x04
 3ca:	1a 83       	std	Y+2, r17	; 0x02
 3cc:	09 83       	std	Y+1, r16	; 0x01
 3ce:	8f ef       	ldi	r24, 0xFF	; 255
 3d0:	9f e7       	ldi	r25, 0x7F	; 127
 3d2:	9e 83       	std	Y+6, r25	; 0x06
 3d4:	8d 83       	std	Y+5, r24	; 0x05
 3d6:	ae 01       	movw	r20, r28
 3d8:	47 5e       	subi	r20, 0xE7	; 231
 3da:	5f 4f       	sbci	r21, 0xFF	; 255
 3dc:	6f 89       	ldd	r22, Y+23	; 0x17
 3de:	78 8d       	ldd	r23, Y+24	; 0x18
 3e0:	ce 01       	movw	r24, r28
 3e2:	01 96       	adiw	r24, 0x01	; 1
 3e4:	0e 94 fd 01 	call	0x3fa	; 0x3fa <vfprintf>
 3e8:	ef 81       	ldd	r30, Y+7	; 0x07
 3ea:	f8 85       	ldd	r31, Y+8	; 0x08
 3ec:	e0 0f       	add	r30, r16
 3ee:	f1 1f       	adc	r31, r17
 3f0:	10 82       	st	Z, r1
 3f2:	2e 96       	adiw	r28, 0x0e	; 14
 3f4:	e4 e0       	ldi	r30, 0x04	; 4
 3f6:	0c 94 b8 04 	jmp	0x970	; 0x970 <__epilogue_restores__+0x1c>

000003fa <vfprintf>:
 3fa:	ab e0       	ldi	r26, 0x0B	; 11
 3fc:	b0 e0       	ldi	r27, 0x00	; 0
 3fe:	e3 e0       	ldi	r30, 0x03	; 3
 400:	f2 e0       	ldi	r31, 0x02	; 2
 402:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__prologue_saves__>
 406:	6c 01       	movw	r12, r24
 408:	7b 01       	movw	r14, r22
 40a:	8a 01       	movw	r16, r20
 40c:	fc 01       	movw	r30, r24
 40e:	17 82       	std	Z+7, r1	; 0x07
 410:	16 82       	std	Z+6, r1	; 0x06
 412:	83 81       	ldd	r24, Z+3	; 0x03
 414:	81 ff       	sbrs	r24, 1
 416:	cc c1       	rjmp	.+920    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 418:	ce 01       	movw	r24, r28
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	3c 01       	movw	r6, r24
 41e:	f6 01       	movw	r30, r12
 420:	93 81       	ldd	r25, Z+3	; 0x03
 422:	f7 01       	movw	r30, r14
 424:	93 fd       	sbrc	r25, 3
 426:	85 91       	lpm	r24, Z+
 428:	93 ff       	sbrs	r25, 3
 42a:	81 91       	ld	r24, Z+
 42c:	7f 01       	movw	r14, r30
 42e:	88 23       	and	r24, r24
 430:	09 f4       	brne	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 432:	ba c1       	rjmp	.+884    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 434:	85 32       	cpi	r24, 0x25	; 37
 436:	39 f4       	brne	.+14     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 438:	93 fd       	sbrc	r25, 3
 43a:	85 91       	lpm	r24, Z+
 43c:	93 ff       	sbrs	r25, 3
 43e:	81 91       	ld	r24, Z+
 440:	7f 01       	movw	r14, r30
 442:	85 32       	cpi	r24, 0x25	; 37
 444:	29 f4       	brne	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 446:	b6 01       	movw	r22, r12
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 44e:	e7 cf       	rjmp	.-50     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 450:	91 2c       	mov	r9, r1
 452:	21 2c       	mov	r2, r1
 454:	31 2c       	mov	r3, r1
 456:	ff e1       	ldi	r31, 0x1F	; 31
 458:	f3 15       	cp	r31, r3
 45a:	d8 f0       	brcs	.+54     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 45c:	8b 32       	cpi	r24, 0x2B	; 43
 45e:	79 f0       	breq	.+30     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 460:	38 f4       	brcc	.+14     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 462:	80 32       	cpi	r24, 0x20	; 32
 464:	79 f0       	breq	.+30     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 466:	83 32       	cpi	r24, 0x23	; 35
 468:	a1 f4       	brne	.+40     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 46a:	23 2d       	mov	r18, r3
 46c:	20 61       	ori	r18, 0x10	; 16
 46e:	1d c0       	rjmp	.+58     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 470:	8d 32       	cpi	r24, 0x2D	; 45
 472:	61 f0       	breq	.+24     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 474:	80 33       	cpi	r24, 0x30	; 48
 476:	69 f4       	brne	.+26     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 478:	23 2d       	mov	r18, r3
 47a:	21 60       	ori	r18, 0x01	; 1
 47c:	16 c0       	rjmp	.+44     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 47e:	83 2d       	mov	r24, r3
 480:	82 60       	ori	r24, 0x02	; 2
 482:	38 2e       	mov	r3, r24
 484:	e3 2d       	mov	r30, r3
 486:	e4 60       	ori	r30, 0x04	; 4
 488:	3e 2e       	mov	r3, r30
 48a:	2a c0       	rjmp	.+84     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 48c:	f3 2d       	mov	r31, r3
 48e:	f8 60       	ori	r31, 0x08	; 8
 490:	1d c0       	rjmp	.+58     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 492:	37 fc       	sbrc	r3, 7
 494:	2d c0       	rjmp	.+90     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 496:	20 ed       	ldi	r18, 0xD0	; 208
 498:	28 0f       	add	r18, r24
 49a:	2a 30       	cpi	r18, 0x0A	; 10
 49c:	40 f0       	brcs	.+16     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 49e:	8e 32       	cpi	r24, 0x2E	; 46
 4a0:	b9 f4       	brne	.+46     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4a2:	36 fc       	sbrc	r3, 6
 4a4:	81 c1       	rjmp	.+770    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 4a6:	23 2d       	mov	r18, r3
 4a8:	20 64       	ori	r18, 0x40	; 64
 4aa:	32 2e       	mov	r3, r18
 4ac:	19 c0       	rjmp	.+50     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4ae:	36 fe       	sbrs	r3, 6
 4b0:	06 c0       	rjmp	.+12     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b2:	8a e0       	ldi	r24, 0x0A	; 10
 4b4:	98 9e       	mul	r9, r24
 4b6:	20 0d       	add	r18, r0
 4b8:	11 24       	eor	r1, r1
 4ba:	92 2e       	mov	r9, r18
 4bc:	11 c0       	rjmp	.+34     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4be:	ea e0       	ldi	r30, 0x0A	; 10
 4c0:	2e 9e       	mul	r2, r30
 4c2:	20 0d       	add	r18, r0
 4c4:	11 24       	eor	r1, r1
 4c6:	22 2e       	mov	r2, r18
 4c8:	f3 2d       	mov	r31, r3
 4ca:	f0 62       	ori	r31, 0x20	; 32
 4cc:	3f 2e       	mov	r3, r31
 4ce:	08 c0       	rjmp	.+16     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d0:	8c 36       	cpi	r24, 0x6C	; 108
 4d2:	21 f4       	brne	.+8      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d4:	83 2d       	mov	r24, r3
 4d6:	80 68       	ori	r24, 0x80	; 128
 4d8:	38 2e       	mov	r3, r24
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4dc:	88 36       	cpi	r24, 0x68	; 104
 4de:	41 f4       	brne	.+16     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4e0:	f7 01       	movw	r30, r14
 4e2:	93 fd       	sbrc	r25, 3
 4e4:	85 91       	lpm	r24, Z+
 4e6:	93 ff       	sbrs	r25, 3
 4e8:	81 91       	ld	r24, Z+
 4ea:	7f 01       	movw	r14, r30
 4ec:	81 11       	cpse	r24, r1
 4ee:	b3 cf       	rjmp	.-154    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 4f0:	98 2f       	mov	r25, r24
 4f2:	9f 7d       	andi	r25, 0xDF	; 223
 4f4:	95 54       	subi	r25, 0x45	; 69
 4f6:	93 30       	cpi	r25, 0x03	; 3
 4f8:	28 f4       	brcc	.+10     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4fa:	0c 5f       	subi	r16, 0xFC	; 252
 4fc:	1f 4f       	sbci	r17, 0xFF	; 255
 4fe:	9f e3       	ldi	r25, 0x3F	; 63
 500:	99 83       	std	Y+1, r25	; 0x01
 502:	0d c0       	rjmp	.+26     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 504:	83 36       	cpi	r24, 0x63	; 99
 506:	31 f0       	breq	.+12     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 508:	83 37       	cpi	r24, 0x73	; 115
 50a:	71 f0       	breq	.+28     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 50c:	83 35       	cpi	r24, 0x53	; 83
 50e:	09 f0       	breq	.+2      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 510:	59 c0       	rjmp	.+178    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 512:	21 c0       	rjmp	.+66     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 514:	f8 01       	movw	r30, r16
 516:	80 81       	ld	r24, Z
 518:	89 83       	std	Y+1, r24	; 0x01
 51a:	0e 5f       	subi	r16, 0xFE	; 254
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	88 24       	eor	r8, r8
 520:	83 94       	inc	r8
 522:	91 2c       	mov	r9, r1
 524:	53 01       	movw	r10, r6
 526:	13 c0       	rjmp	.+38     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 528:	28 01       	movw	r4, r16
 52a:	f2 e0       	ldi	r31, 0x02	; 2
 52c:	4f 0e       	add	r4, r31
 52e:	51 1c       	adc	r5, r1
 530:	f8 01       	movw	r30, r16
 532:	a0 80       	ld	r10, Z
 534:	b1 80       	ldd	r11, Z+1	; 0x01
 536:	36 fe       	sbrs	r3, 6
 538:	03 c0       	rjmp	.+6      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53a:	69 2d       	mov	r22, r9
 53c:	70 e0       	ldi	r23, 0x00	; 0
 53e:	02 c0       	rjmp	.+4      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 540:	6f ef       	ldi	r22, 0xFF	; 255
 542:	7f ef       	ldi	r23, 0xFF	; 255
 544:	c5 01       	movw	r24, r10
 546:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <strnlen>
 54a:	4c 01       	movw	r8, r24
 54c:	82 01       	movw	r16, r4
 54e:	f3 2d       	mov	r31, r3
 550:	ff 77       	andi	r31, 0x7F	; 127
 552:	3f 2e       	mov	r3, r31
 554:	16 c0       	rjmp	.+44     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 556:	28 01       	movw	r4, r16
 558:	22 e0       	ldi	r18, 0x02	; 2
 55a:	42 0e       	add	r4, r18
 55c:	51 1c       	adc	r5, r1
 55e:	f8 01       	movw	r30, r16
 560:	a0 80       	ld	r10, Z
 562:	b1 80       	ldd	r11, Z+1	; 0x01
 564:	36 fe       	sbrs	r3, 6
 566:	03 c0       	rjmp	.+6      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 568:	69 2d       	mov	r22, r9
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 56e:	6f ef       	ldi	r22, 0xFF	; 255
 570:	7f ef       	ldi	r23, 0xFF	; 255
 572:	c5 01       	movw	r24, r10
 574:	0e 94 de 03 	call	0x7bc	; 0x7bc <strnlen_P>
 578:	4c 01       	movw	r8, r24
 57a:	f3 2d       	mov	r31, r3
 57c:	f0 68       	ori	r31, 0x80	; 128
 57e:	3f 2e       	mov	r3, r31
 580:	82 01       	movw	r16, r4
 582:	33 fc       	sbrc	r3, 3
 584:	1b c0       	rjmp	.+54     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 586:	82 2d       	mov	r24, r2
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	88 16       	cp	r8, r24
 58c:	99 06       	cpc	r9, r25
 58e:	b0 f4       	brcc	.+44     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 590:	b6 01       	movw	r22, r12
 592:	80 e2       	ldi	r24, 0x20	; 32
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 59a:	2a 94       	dec	r2
 59c:	f4 cf       	rjmp	.-24     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 59e:	f5 01       	movw	r30, r10
 5a0:	37 fc       	sbrc	r3, 7
 5a2:	85 91       	lpm	r24, Z+
 5a4:	37 fe       	sbrs	r3, 7
 5a6:	81 91       	ld	r24, Z+
 5a8:	5f 01       	movw	r10, r30
 5aa:	b6 01       	movw	r22, r12
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 5b2:	21 10       	cpse	r2, r1
 5b4:	2a 94       	dec	r2
 5b6:	21 e0       	ldi	r18, 0x01	; 1
 5b8:	82 1a       	sub	r8, r18
 5ba:	91 08       	sbc	r9, r1
 5bc:	81 14       	cp	r8, r1
 5be:	91 04       	cpc	r9, r1
 5c0:	71 f7       	brne	.-36     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 5c2:	e8 c0       	rjmp	.+464    	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 5c4:	84 36       	cpi	r24, 0x64	; 100
 5c6:	11 f0       	breq	.+4      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c8:	89 36       	cpi	r24, 0x69	; 105
 5ca:	41 f5       	brne	.+80     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 5cc:	f8 01       	movw	r30, r16
 5ce:	37 fe       	sbrs	r3, 7
 5d0:	07 c0       	rjmp	.+14     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d2:	60 81       	ld	r22, Z
 5d4:	71 81       	ldd	r23, Z+1	; 0x01
 5d6:	82 81       	ldd	r24, Z+2	; 0x02
 5d8:	93 81       	ldd	r25, Z+3	; 0x03
 5da:	0c 5f       	subi	r16, 0xFC	; 252
 5dc:	1f 4f       	sbci	r17, 0xFF	; 255
 5de:	08 c0       	rjmp	.+16     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5e0:	60 81       	ld	r22, Z
 5e2:	71 81       	ldd	r23, Z+1	; 0x01
 5e4:	07 2e       	mov	r0, r23
 5e6:	00 0c       	add	r0, r0
 5e8:	88 0b       	sbc	r24, r24
 5ea:	99 0b       	sbc	r25, r25
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	f3 2d       	mov	r31, r3
 5f2:	ff 76       	andi	r31, 0x6F	; 111
 5f4:	3f 2e       	mov	r3, r31
 5f6:	97 ff       	sbrs	r25, 7
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5fa:	90 95       	com	r25
 5fc:	80 95       	com	r24
 5fe:	70 95       	com	r23
 600:	61 95       	neg	r22
 602:	7f 4f       	sbci	r23, 0xFF	; 255
 604:	8f 4f       	sbci	r24, 0xFF	; 255
 606:	9f 4f       	sbci	r25, 0xFF	; 255
 608:	f0 68       	ori	r31, 0x80	; 128
 60a:	3f 2e       	mov	r3, r31
 60c:	2a e0       	ldi	r18, 0x0A	; 10
 60e:	30 e0       	ldi	r19, 0x00	; 0
 610:	a3 01       	movw	r20, r6
 612:	0e 94 30 04 	call	0x860	; 0x860 <__ultoa_invert>
 616:	88 2e       	mov	r8, r24
 618:	86 18       	sub	r8, r6
 61a:	45 c0       	rjmp	.+138    	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 61c:	85 37       	cpi	r24, 0x75	; 117
 61e:	31 f4       	brne	.+12     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 620:	23 2d       	mov	r18, r3
 622:	2f 7e       	andi	r18, 0xEF	; 239
 624:	b2 2e       	mov	r11, r18
 626:	2a e0       	ldi	r18, 0x0A	; 10
 628:	30 e0       	ldi	r19, 0x00	; 0
 62a:	25 c0       	rjmp	.+74     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 62c:	93 2d       	mov	r25, r3
 62e:	99 7f       	andi	r25, 0xF9	; 249
 630:	b9 2e       	mov	r11, r25
 632:	8f 36       	cpi	r24, 0x6F	; 111
 634:	c1 f0       	breq	.+48     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 636:	18 f4       	brcc	.+6      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 638:	88 35       	cpi	r24, 0x58	; 88
 63a:	79 f0       	breq	.+30     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 63c:	b5 c0       	rjmp	.+362    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 63e:	80 37       	cpi	r24, 0x70	; 112
 640:	19 f0       	breq	.+6      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 642:	88 37       	cpi	r24, 0x78	; 120
 644:	21 f0       	breq	.+8      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 646:	b0 c0       	rjmp	.+352    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 648:	e9 2f       	mov	r30, r25
 64a:	e0 61       	ori	r30, 0x10	; 16
 64c:	be 2e       	mov	r11, r30
 64e:	b4 fe       	sbrs	r11, 4
 650:	0d c0       	rjmp	.+26     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 652:	fb 2d       	mov	r31, r11
 654:	f4 60       	ori	r31, 0x04	; 4
 656:	bf 2e       	mov	r11, r31
 658:	09 c0       	rjmp	.+18     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 65a:	34 fe       	sbrs	r3, 4
 65c:	0a c0       	rjmp	.+20     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 65e:	29 2f       	mov	r18, r25
 660:	26 60       	ori	r18, 0x06	; 6
 662:	b2 2e       	mov	r11, r18
 664:	06 c0       	rjmp	.+12     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 666:	28 e0       	ldi	r18, 0x08	; 8
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	05 c0       	rjmp	.+10     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 66c:	20 e1       	ldi	r18, 0x10	; 16
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	02 c0       	rjmp	.+4      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 672:	20 e1       	ldi	r18, 0x10	; 16
 674:	32 e0       	ldi	r19, 0x02	; 2
 676:	f8 01       	movw	r30, r16
 678:	b7 fe       	sbrs	r11, 7
 67a:	07 c0       	rjmp	.+14     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 67c:	60 81       	ld	r22, Z
 67e:	71 81       	ldd	r23, Z+1	; 0x01
 680:	82 81       	ldd	r24, Z+2	; 0x02
 682:	93 81       	ldd	r25, Z+3	; 0x03
 684:	0c 5f       	subi	r16, 0xFC	; 252
 686:	1f 4f       	sbci	r17, 0xFF	; 255
 688:	06 c0       	rjmp	.+12     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 68a:	60 81       	ld	r22, Z
 68c:	71 81       	ldd	r23, Z+1	; 0x01
 68e:	80 e0       	ldi	r24, 0x00	; 0
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	0e 5f       	subi	r16, 0xFE	; 254
 694:	1f 4f       	sbci	r17, 0xFF	; 255
 696:	a3 01       	movw	r20, r6
 698:	0e 94 30 04 	call	0x860	; 0x860 <__ultoa_invert>
 69c:	88 2e       	mov	r8, r24
 69e:	86 18       	sub	r8, r6
 6a0:	fb 2d       	mov	r31, r11
 6a2:	ff 77       	andi	r31, 0x7F	; 127
 6a4:	3f 2e       	mov	r3, r31
 6a6:	36 fe       	sbrs	r3, 6
 6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6aa:	23 2d       	mov	r18, r3
 6ac:	2e 7f       	andi	r18, 0xFE	; 254
 6ae:	a2 2e       	mov	r10, r18
 6b0:	89 14       	cp	r8, r9
 6b2:	58 f4       	brcc	.+22     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6b4:	34 fe       	sbrs	r3, 4
 6b6:	0b c0       	rjmp	.+22     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6b8:	32 fc       	sbrc	r3, 2
 6ba:	09 c0       	rjmp	.+18     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6bc:	83 2d       	mov	r24, r3
 6be:	8e 7e       	andi	r24, 0xEE	; 238
 6c0:	a8 2e       	mov	r10, r24
 6c2:	05 c0       	rjmp	.+10     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6c4:	b8 2c       	mov	r11, r8
 6c6:	a3 2c       	mov	r10, r3
 6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ca:	b8 2c       	mov	r11, r8
 6cc:	01 c0       	rjmp	.+2      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ce:	b9 2c       	mov	r11, r9
 6d0:	a4 fe       	sbrs	r10, 4
 6d2:	0f c0       	rjmp	.+30     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6d4:	fe 01       	movw	r30, r28
 6d6:	e8 0d       	add	r30, r8
 6d8:	f1 1d       	adc	r31, r1
 6da:	80 81       	ld	r24, Z
 6dc:	80 33       	cpi	r24, 0x30	; 48
 6de:	21 f4       	brne	.+8      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e0:	9a 2d       	mov	r25, r10
 6e2:	99 7e       	andi	r25, 0xE9	; 233
 6e4:	a9 2e       	mov	r10, r25
 6e6:	09 c0       	rjmp	.+18     	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6e8:	a2 fe       	sbrs	r10, 2
 6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6ec:	b3 94       	inc	r11
 6ee:	b3 94       	inc	r11
 6f0:	04 c0       	rjmp	.+8      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f2:	8a 2d       	mov	r24, r10
 6f4:	86 78       	andi	r24, 0x86	; 134
 6f6:	09 f0       	breq	.+2      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f8:	b3 94       	inc	r11
 6fa:	a3 fc       	sbrc	r10, 3
 6fc:	11 c0       	rjmp	.+34     	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 6fe:	a0 fe       	sbrs	r10, 0
 700:	06 c0       	rjmp	.+12     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 702:	b2 14       	cp	r11, r2
 704:	88 f4       	brcc	.+34     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 706:	28 0c       	add	r2, r8
 708:	92 2c       	mov	r9, r2
 70a:	9b 18       	sub	r9, r11
 70c:	0e c0       	rjmp	.+28     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 70e:	b2 14       	cp	r11, r2
 710:	60 f4       	brcc	.+24     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 712:	b6 01       	movw	r22, r12
 714:	80 e2       	ldi	r24, 0x20	; 32
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 71c:	b3 94       	inc	r11
 71e:	f7 cf       	rjmp	.-18     	; 0x70e <__LOCK_REGION_LENGTH__+0x30e>
 720:	b2 14       	cp	r11, r2
 722:	18 f4       	brcc	.+6      	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 724:	2b 18       	sub	r2, r11
 726:	02 c0       	rjmp	.+4      	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 728:	98 2c       	mov	r9, r8
 72a:	21 2c       	mov	r2, r1
 72c:	a4 fe       	sbrs	r10, 4
 72e:	10 c0       	rjmp	.+32     	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 730:	b6 01       	movw	r22, r12
 732:	80 e3       	ldi	r24, 0x30	; 48
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 73a:	a2 fe       	sbrs	r10, 2
 73c:	17 c0       	rjmp	.+46     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 73e:	a1 fc       	sbrc	r10, 1
 740:	03 c0       	rjmp	.+6      	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 742:	88 e7       	ldi	r24, 0x78	; 120
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	02 c0       	rjmp	.+4      	; 0x74c <__LOCK_REGION_LENGTH__+0x34c>
 748:	88 e5       	ldi	r24, 0x58	; 88
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	b6 01       	movw	r22, r12
 74e:	0c c0       	rjmp	.+24     	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 750:	8a 2d       	mov	r24, r10
 752:	86 78       	andi	r24, 0x86	; 134
 754:	59 f0       	breq	.+22     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 756:	a1 fe       	sbrs	r10, 1
 758:	02 c0       	rjmp	.+4      	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 75a:	8b e2       	ldi	r24, 0x2B	; 43
 75c:	01 c0       	rjmp	.+2      	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
 75e:	80 e2       	ldi	r24, 0x20	; 32
 760:	a7 fc       	sbrc	r10, 7
 762:	8d e2       	ldi	r24, 0x2D	; 45
 764:	b6 01       	movw	r22, r12
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 76c:	89 14       	cp	r8, r9
 76e:	38 f4       	brcc	.+14     	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 770:	b6 01       	movw	r22, r12
 772:	80 e3       	ldi	r24, 0x30	; 48
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 77a:	9a 94       	dec	r9
 77c:	f7 cf       	rjmp	.-18     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 77e:	8a 94       	dec	r8
 780:	f3 01       	movw	r30, r6
 782:	e8 0d       	add	r30, r8
 784:	f1 1d       	adc	r31, r1
 786:	80 81       	ld	r24, Z
 788:	b6 01       	movw	r22, r12
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 790:	81 10       	cpse	r8, r1
 792:	f5 cf       	rjmp	.-22     	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 794:	22 20       	and	r2, r2
 796:	09 f4       	brne	.+2      	; 0x79a <__LOCK_REGION_LENGTH__+0x39a>
 798:	42 ce       	rjmp	.-892    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 79a:	b6 01       	movw	r22, r12
 79c:	80 e2       	ldi	r24, 0x20	; 32
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <fputc>
 7a4:	2a 94       	dec	r2
 7a6:	f6 cf       	rjmp	.-20     	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 7a8:	f6 01       	movw	r30, r12
 7aa:	86 81       	ldd	r24, Z+6	; 0x06
 7ac:	97 81       	ldd	r25, Z+7	; 0x07
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <__LOCK_REGION_LENGTH__+0x3b4>
 7b0:	8f ef       	ldi	r24, 0xFF	; 255
 7b2:	9f ef       	ldi	r25, 0xFF	; 255
 7b4:	2b 96       	adiw	r28, 0x0b	; 11
 7b6:	e2 e1       	ldi	r30, 0x12	; 18
 7b8:	0c 94 aa 04 	jmp	0x954	; 0x954 <__epilogue_restores__>

000007bc <strnlen_P>:
 7bc:	fc 01       	movw	r30, r24
 7be:	05 90       	lpm	r0, Z+
 7c0:	61 50       	subi	r22, 0x01	; 1
 7c2:	70 40       	sbci	r23, 0x00	; 0
 7c4:	01 10       	cpse	r0, r1
 7c6:	d8 f7       	brcc	.-10     	; 0x7be <strnlen_P+0x2>
 7c8:	80 95       	com	r24
 7ca:	90 95       	com	r25
 7cc:	8e 0f       	add	r24, r30
 7ce:	9f 1f       	adc	r25, r31
 7d0:	08 95       	ret

000007d2 <strnlen>:
 7d2:	fc 01       	movw	r30, r24
 7d4:	61 50       	subi	r22, 0x01	; 1
 7d6:	70 40       	sbci	r23, 0x00	; 0
 7d8:	01 90       	ld	r0, Z+
 7da:	01 10       	cpse	r0, r1
 7dc:	d8 f7       	brcc	.-10     	; 0x7d4 <strnlen+0x2>
 7de:	80 95       	com	r24
 7e0:	90 95       	com	r25
 7e2:	8e 0f       	add	r24, r30
 7e4:	9f 1f       	adc	r25, r31
 7e6:	08 95       	ret

000007e8 <fputc>:
 7e8:	0f 93       	push	r16
 7ea:	1f 93       	push	r17
 7ec:	cf 93       	push	r28
 7ee:	df 93       	push	r29
 7f0:	fb 01       	movw	r30, r22
 7f2:	23 81       	ldd	r18, Z+3	; 0x03
 7f4:	21 fd       	sbrc	r18, 1
 7f6:	03 c0       	rjmp	.+6      	; 0x7fe <fputc+0x16>
 7f8:	8f ef       	ldi	r24, 0xFF	; 255
 7fa:	9f ef       	ldi	r25, 0xFF	; 255
 7fc:	2c c0       	rjmp	.+88     	; 0x856 <fputc+0x6e>
 7fe:	22 ff       	sbrs	r18, 2
 800:	16 c0       	rjmp	.+44     	; 0x82e <fputc+0x46>
 802:	46 81       	ldd	r20, Z+6	; 0x06
 804:	57 81       	ldd	r21, Z+7	; 0x07
 806:	24 81       	ldd	r18, Z+4	; 0x04
 808:	35 81       	ldd	r19, Z+5	; 0x05
 80a:	42 17       	cp	r20, r18
 80c:	53 07       	cpc	r21, r19
 80e:	44 f4       	brge	.+16     	; 0x820 <fputc+0x38>
 810:	a0 81       	ld	r26, Z
 812:	b1 81       	ldd	r27, Z+1	; 0x01
 814:	9d 01       	movw	r18, r26
 816:	2f 5f       	subi	r18, 0xFF	; 255
 818:	3f 4f       	sbci	r19, 0xFF	; 255
 81a:	31 83       	std	Z+1, r19	; 0x01
 81c:	20 83       	st	Z, r18
 81e:	8c 93       	st	X, r24
 820:	26 81       	ldd	r18, Z+6	; 0x06
 822:	37 81       	ldd	r19, Z+7	; 0x07
 824:	2f 5f       	subi	r18, 0xFF	; 255
 826:	3f 4f       	sbci	r19, 0xFF	; 255
 828:	37 83       	std	Z+7, r19	; 0x07
 82a:	26 83       	std	Z+6, r18	; 0x06
 82c:	14 c0       	rjmp	.+40     	; 0x856 <fputc+0x6e>
 82e:	8b 01       	movw	r16, r22
 830:	ec 01       	movw	r28, r24
 832:	fb 01       	movw	r30, r22
 834:	00 84       	ldd	r0, Z+8	; 0x08
 836:	f1 85       	ldd	r31, Z+9	; 0x09
 838:	e0 2d       	mov	r30, r0
 83a:	09 95       	icall
 83c:	89 2b       	or	r24, r25
 83e:	e1 f6       	brne	.-72     	; 0x7f8 <fputc+0x10>
 840:	d8 01       	movw	r26, r16
 842:	16 96       	adiw	r26, 0x06	; 6
 844:	8d 91       	ld	r24, X+
 846:	9c 91       	ld	r25, X
 848:	17 97       	sbiw	r26, 0x07	; 7
 84a:	01 96       	adiw	r24, 0x01	; 1
 84c:	17 96       	adiw	r26, 0x07	; 7
 84e:	9c 93       	st	X, r25
 850:	8e 93       	st	-X, r24
 852:	16 97       	sbiw	r26, 0x06	; 6
 854:	ce 01       	movw	r24, r28
 856:	df 91       	pop	r29
 858:	cf 91       	pop	r28
 85a:	1f 91       	pop	r17
 85c:	0f 91       	pop	r16
 85e:	08 95       	ret

00000860 <__ultoa_invert>:
 860:	fa 01       	movw	r30, r20
 862:	aa 27       	eor	r26, r26
 864:	28 30       	cpi	r18, 0x08	; 8
 866:	51 f1       	breq	.+84     	; 0x8bc <__ultoa_invert+0x5c>
 868:	20 31       	cpi	r18, 0x10	; 16
 86a:	81 f1       	breq	.+96     	; 0x8cc <__ultoa_invert+0x6c>
 86c:	e8 94       	clt
 86e:	6f 93       	push	r22
 870:	6e 7f       	andi	r22, 0xFE	; 254
 872:	6e 5f       	subi	r22, 0xFE	; 254
 874:	7f 4f       	sbci	r23, 0xFF	; 255
 876:	8f 4f       	sbci	r24, 0xFF	; 255
 878:	9f 4f       	sbci	r25, 0xFF	; 255
 87a:	af 4f       	sbci	r26, 0xFF	; 255
 87c:	b1 e0       	ldi	r27, 0x01	; 1
 87e:	3e d0       	rcall	.+124    	; 0x8fc <__ultoa_invert+0x9c>
 880:	b4 e0       	ldi	r27, 0x04	; 4
 882:	3c d0       	rcall	.+120    	; 0x8fc <__ultoa_invert+0x9c>
 884:	67 0f       	add	r22, r23
 886:	78 1f       	adc	r23, r24
 888:	89 1f       	adc	r24, r25
 88a:	9a 1f       	adc	r25, r26
 88c:	a1 1d       	adc	r26, r1
 88e:	68 0f       	add	r22, r24
 890:	79 1f       	adc	r23, r25
 892:	8a 1f       	adc	r24, r26
 894:	91 1d       	adc	r25, r1
 896:	a1 1d       	adc	r26, r1
 898:	6a 0f       	add	r22, r26
 89a:	71 1d       	adc	r23, r1
 89c:	81 1d       	adc	r24, r1
 89e:	91 1d       	adc	r25, r1
 8a0:	a1 1d       	adc	r26, r1
 8a2:	20 d0       	rcall	.+64     	; 0x8e4 <__ultoa_invert+0x84>
 8a4:	09 f4       	brne	.+2      	; 0x8a8 <__ultoa_invert+0x48>
 8a6:	68 94       	set
 8a8:	3f 91       	pop	r19
 8aa:	2a e0       	ldi	r18, 0x0A	; 10
 8ac:	26 9f       	mul	r18, r22
 8ae:	11 24       	eor	r1, r1
 8b0:	30 19       	sub	r19, r0
 8b2:	30 5d       	subi	r19, 0xD0	; 208
 8b4:	31 93       	st	Z+, r19
 8b6:	de f6       	brtc	.-74     	; 0x86e <__ultoa_invert+0xe>
 8b8:	cf 01       	movw	r24, r30
 8ba:	08 95       	ret
 8bc:	46 2f       	mov	r20, r22
 8be:	47 70       	andi	r20, 0x07	; 7
 8c0:	40 5d       	subi	r20, 0xD0	; 208
 8c2:	41 93       	st	Z+, r20
 8c4:	b3 e0       	ldi	r27, 0x03	; 3
 8c6:	0f d0       	rcall	.+30     	; 0x8e6 <__ultoa_invert+0x86>
 8c8:	c9 f7       	brne	.-14     	; 0x8bc <__ultoa_invert+0x5c>
 8ca:	f6 cf       	rjmp	.-20     	; 0x8b8 <__ultoa_invert+0x58>
 8cc:	46 2f       	mov	r20, r22
 8ce:	4f 70       	andi	r20, 0x0F	; 15
 8d0:	40 5d       	subi	r20, 0xD0	; 208
 8d2:	4a 33       	cpi	r20, 0x3A	; 58
 8d4:	18 f0       	brcs	.+6      	; 0x8dc <__ultoa_invert+0x7c>
 8d6:	49 5d       	subi	r20, 0xD9	; 217
 8d8:	31 fd       	sbrc	r19, 1
 8da:	40 52       	subi	r20, 0x20	; 32
 8dc:	41 93       	st	Z+, r20
 8de:	02 d0       	rcall	.+4      	; 0x8e4 <__ultoa_invert+0x84>
 8e0:	a9 f7       	brne	.-22     	; 0x8cc <__ultoa_invert+0x6c>
 8e2:	ea cf       	rjmp	.-44     	; 0x8b8 <__ultoa_invert+0x58>
 8e4:	b4 e0       	ldi	r27, 0x04	; 4
 8e6:	a6 95       	lsr	r26
 8e8:	97 95       	ror	r25
 8ea:	87 95       	ror	r24
 8ec:	77 95       	ror	r23
 8ee:	67 95       	ror	r22
 8f0:	ba 95       	dec	r27
 8f2:	c9 f7       	brne	.-14     	; 0x8e6 <__ultoa_invert+0x86>
 8f4:	00 97       	sbiw	r24, 0x00	; 0
 8f6:	61 05       	cpc	r22, r1
 8f8:	71 05       	cpc	r23, r1
 8fa:	08 95       	ret
 8fc:	9b 01       	movw	r18, r22
 8fe:	ac 01       	movw	r20, r24
 900:	0a 2e       	mov	r0, r26
 902:	06 94       	lsr	r0
 904:	57 95       	ror	r21
 906:	47 95       	ror	r20
 908:	37 95       	ror	r19
 90a:	27 95       	ror	r18
 90c:	ba 95       	dec	r27
 90e:	c9 f7       	brne	.-14     	; 0x902 <__stack+0x3>
 910:	62 0f       	add	r22, r18
 912:	73 1f       	adc	r23, r19
 914:	84 1f       	adc	r24, r20
 916:	95 1f       	adc	r25, r21
 918:	a0 1d       	adc	r26, r0
 91a:	08 95       	ret

0000091c <__prologue_saves__>:
 91c:	2f 92       	push	r2
 91e:	3f 92       	push	r3
 920:	4f 92       	push	r4
 922:	5f 92       	push	r5
 924:	6f 92       	push	r6
 926:	7f 92       	push	r7
 928:	8f 92       	push	r8
 92a:	9f 92       	push	r9
 92c:	af 92       	push	r10
 92e:	bf 92       	push	r11
 930:	cf 92       	push	r12
 932:	df 92       	push	r13
 934:	ef 92       	push	r14
 936:	ff 92       	push	r15
 938:	0f 93       	push	r16
 93a:	1f 93       	push	r17
 93c:	cf 93       	push	r28
 93e:	df 93       	push	r29
 940:	cd b7       	in	r28, 0x3d	; 61
 942:	de b7       	in	r29, 0x3e	; 62
 944:	ca 1b       	sub	r28, r26
 946:	db 0b       	sbc	r29, r27
 948:	0f b6       	in	r0, 0x3f	; 63
 94a:	f8 94       	cli
 94c:	de bf       	out	0x3e, r29	; 62
 94e:	0f be       	out	0x3f, r0	; 63
 950:	cd bf       	out	0x3d, r28	; 61
 952:	09 94       	ijmp

00000954 <__epilogue_restores__>:
 954:	2a 88       	ldd	r2, Y+18	; 0x12
 956:	39 88       	ldd	r3, Y+17	; 0x11
 958:	48 88       	ldd	r4, Y+16	; 0x10
 95a:	5f 84       	ldd	r5, Y+15	; 0x0f
 95c:	6e 84       	ldd	r6, Y+14	; 0x0e
 95e:	7d 84       	ldd	r7, Y+13	; 0x0d
 960:	8c 84       	ldd	r8, Y+12	; 0x0c
 962:	9b 84       	ldd	r9, Y+11	; 0x0b
 964:	aa 84       	ldd	r10, Y+10	; 0x0a
 966:	b9 84       	ldd	r11, Y+9	; 0x09
 968:	c8 84       	ldd	r12, Y+8	; 0x08
 96a:	df 80       	ldd	r13, Y+7	; 0x07
 96c:	ee 80       	ldd	r14, Y+6	; 0x06
 96e:	fd 80       	ldd	r15, Y+5	; 0x05
 970:	0c 81       	ldd	r16, Y+4	; 0x04
 972:	1b 81       	ldd	r17, Y+3	; 0x03
 974:	aa 81       	ldd	r26, Y+2	; 0x02
 976:	b9 81       	ldd	r27, Y+1	; 0x01
 978:	ce 0f       	add	r28, r30
 97a:	d1 1d       	adc	r29, r1
 97c:	0f b6       	in	r0, 0x3f	; 63
 97e:	f8 94       	cli
 980:	de bf       	out	0x3e, r29	; 62
 982:	0f be       	out	0x3f, r0	; 63
 984:	cd bf       	out	0x3d, r28	; 61
 986:	ed 01       	movw	r28, r26
 988:	08 95       	ret

0000098a <_exit>:
 98a:	f8 94       	cli

0000098c <__stop_program>:
 98c:	ff cf       	rjmp	.-2      	; 0x98c <__stop_program>
